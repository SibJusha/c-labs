#include <stdio.h>

int main() {
    int n, m;
    scanf("%d %d", &m, &n);
    int a[n][m];
    int b[n][m];
    int saddle_count = 0;
    int saddle_points[n*m][2];
    int top_sp = 0;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) scanf("%d", &a[i][j]);
    }
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++) b[i][j] = a[i][j];
    }
    if(n == 0 || m == 0){
        printf("%d \n", 0);
        return 0;
    }

    int queue[m];
    for(int i = 0; i < n; i++){
        unsigned char top = 0;
        int minimal = a[i][0];
        for(int j = 0; j < m; j++){
            if(a[i][j] == minimal){
                queue[top] = j;
                top++;
            }
            else if(a[i][j] < minimal){
                queue[0] = j;
                top = 1;
                minimal = a[i][j];
            }
        }
        char stop = 0;
        for(int j = 0; j < top; j++){
            for(int k = 0; k < n && stop == 0; k++){
                if(a[k][queue[j]] > a[i][queue[j]]) {
                    stop = 1;
                }
            }
            if(stop == 0){
                saddle_count++;
                saddle_points[top_sp][0] = i;
                saddle_points[top_sp][1] = queue[j];
                top_sp++;
                int new_saddle = 0;
                for(int p = 0; p < n; p++) new_saddle += a[p][queue[j]];
                new_saddle = new_saddle / n;
                b[i][queue[j]] = new_saddle;
            }
        }
    }

    printf("%d \n", saddle_count);
    for(int i = 0; i < top_sp; i++) printf("%d %d \n", saddle_points[i][0], saddle_points[i][1]);
    printf("\n");
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) printf("%d ", b[i][j]);
        printf("\n");
    }

    return 0;
}
